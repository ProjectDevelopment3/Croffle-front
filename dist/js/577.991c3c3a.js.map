{"version":3,"file":"js/577.991c3c3a.js","mappings":"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","sources":["webpack://croffle-frontend/./src/api/cafe.js","webpack://croffle-frontend/./src/api/common/interceptors.js","webpack://croffle-frontend/./src/api/index.js","webpack://croffle-frontend/./src/components/Main/MainComponent.vue","webpack://croffle-frontend/./src/components/Main/NotRegisteredCafe.vue","webpack://croffle-frontend/./src/components/Main/NotRegisteredCafe.vue?5e0a","webpack://croffle-frontend/./src/components/Main/CafeListComponent.vue","webpack://croffle-frontend/./src/components/Main/CafeListComponent.vue?71ed","webpack://croffle-frontend/./src/components/Main/SearchbarComponent.vue","webpack://croffle-frontend/./src/components/Main/SearchbarComponent.vue?0302","webpack://croffle-frontend/./src/components/Main/MainComponent.vue?3e40"],"sourcesContent":["/* 카페 관련 서비스 api 함수 */\nimport { instance } from \"@/api/index\";\n\n/* 카페 */\n// 카페 전체 조회\nfunction fetchCafes() {\n  return instance.get(\"cafes\");\n}\n\n// 카페 상세정보 조회\nfunction fetchCafeInfo(cafeId) {\n  return instance.get(`cafe?id=${cafeId}`);\n}\n\n// 전체 검색 - 카페\nfunction searchCafeInfo(cafeName) {\n  return instance.get(`cafe/search?name=${cafeName}`);\n}\n\n// 카페 메뉴 조회(추가 예정)\n\nexport { fetchCafes, fetchCafeInfo, searchCafeInfo };\n","import { getAuthFromCookie } from \"@/utils/cookies.js\";\n\nexport function setInterceptors(instance) {\n  // Add a request interceptor\n  instance.interceptors.request.use(\n    function (config) {\n      // Do something before request is sent\n      // console.log(config);\n      console.log(config);\n      config.headers.Authorization = `Bearer ${getAuthFromCookie()}`;\n      return config;\n    },\n    function (error) {\n      // Do something with request error\n      return Promise.reject(error);\n    }\n  );\n\n  // Add a response interceptor\n  instance.interceptors.response.use(\n    function (response) {\n      // Any status code that lie within the range of 2xx cause this function to trigger\n      // Do something with response data\n      return response;\n    },\n    function (error) {\n      // Any status codes that falls outside the range of 2xx cause this function to trigger\n      // Do something with response error\n      // 재요청인데\n      return Promise.reject(error);\n    }\n  );\n  return instance;\n}\n","import axios from \"axios\";\n\nimport { setInterceptors } from \"./common/interceptors\";\n\n// 1. 액시오스 초기화 함수 - 회원 권한 필요 없는\nfunction createInstance() {\n  return axios.create({\n    // baseURL: process.env.VUE_APP_API_URL, // 안되면 '/'로 변경\n    // baseURL: `/api`,\n    baseURL: \"192.168.0.17:8080/\",\n  });\n  // return instance;\n  // return setInterceptors(instance);\n}\n\n// 2. 회원 권한 필요한 경우\nfunction createInstanceWithAuth() {\n  const instance = axios.create({\n    baseURL: `/api`,\n  });\n  return setInterceptors(instance);\n}\n\n// 1. 공통(회원 권한 x)\nexport const instance = createInstance();\n\n// 2. 회원 권한 필요한 경우\nexport const instanceWithAuth = createInstanceWithAuth();\n\n/*********** 네이버 ************/\n// 네이버 검색\nfunction createNaverInstance() {\n  return axios.create({\n    baseURL: `/v1/search`,\n    headers: {\n      \"X-Naver-Client-Id\": \"WDBUTDGAh6YGJ6Umihxr\",\n      \"X-Naver-Client-Secret\": \"Vjn2nII5K3\",\n    },\n  });\n  // return instance;\n}\n\n// 네이버 프로필 호출\nfunction createNaverProfile() {\n  const instance = axios.create({\n    baseURL: `/v4`,\n  });\n  return setInterceptors(instance);\n}\n\n// 네이버 GeoLocation 현재 위치 제공\nfunction createNaverGeoLocation() {\n  const time = Math.floor(+new Date()).toString();\n  const instance = axios.create({\n    baseURL: `/v3/geolocation/v2`,\n    headers: {\n      \"x-ncp-apigw-timestamp\": time,\n      \"x-ncp-iam-access-key\": \"wnm6dyQfAzJLgs1r8r9I\",\n      \"x-ncp-apigw-signature-v2\": \"l9RFKQeUe3n09f4cu2m6CWyayyoC0p5jgrPXerDf\",\n    },\n  });\n  return instance;\n}\n\n// ip 주소 가져오기\nfunction createIpInstance() {\n  const instance = axios.create({\n    baseURL: `/v2`,\n  });\n  return instance;\n}\n\n// 카페 제보 네이버 검색\nexport const search = createNaverInstance();\n\n// 현재 위치 정보 제공\nexport const geolocation = createNaverGeoLocation();\n\n// 네이버 프로필 호출\nexport const profile = createNaverProfile();\n\n// 클라이언드 ip 주소 제공\nexport const getIp = createIpInstance();\n","<template>\n  <div>\n    <searchbar-component\n      @showResult=\"showResult\"\n      @fetchInfo=\"fetchInfo\"\n      @fetchResult=\"fetchResult\"\n      :service=\"service\"\n      :registered=\"registered\"\n    ></searchbar-component>\n    <div v-if=\"service == false\" class=\"search\">\n      <not-registered-cafe\n        v-if=\"registered == false\"\n        @close-page=\"service = true\"\n      >\n      </not-registered-cafe>\n      <cafe-list-component\n        v-if=\"registered == true\"\n        @close-page=\"service = true\"\n      ></cafe-list-component>\n    </div>\n\n    <div v-if=\"service == true\">\n      <naver-maps\n        width=\"100%\"\n        height=\"100vh\"\n        class=\"main-container--map\"\n        @onLoad=\"onLoadMap(cafes)\"\n      >\n        <naver-marker\n          v-for=\"(cafe, index) in cafes\"\n          :key=\"index\"\n          :latitude=\"cafe.mapy\"\n          :longitude=\"cafe.mapx\"\n          @onLoad=\"onLoadMarker($event)\"\n          @click=\"openInfo(index)\"\n        >\n          <img :src=\"ic__marker\" />\n          <!-- <button @click=\"fetchInfo\" class=\"btn--transparent\" id=\"btn-detail\"> -->\n          <!-- <img :src=\"ic__speechBubble\" /> -->\n          <!-- </button> -->\n          <div v-if=\"isWindowOpen\" class=\"infoWindow\">\n            {{ cafe[index].id }}\n          </div>\n        </naver-marker>\n        <naver-info-window\n          :marker=\"marker\"\n          :isOpen=\"isOpen\"\n          @onLoad=\"onLoadInfoWindow(event)\"\n        >\n          <!-- <div class=\"infowindow-style\">\n            {{ cafes.mapx }}\n          </div> -->\n        </naver-info-window>\n      </naver-maps>\n      <div class=\"map__wrapper\">\n        <p class=\"guide\" id=\"guide\">\n          원정대에게 알려주고 싶은 카페가 있나요?<br />\n          카페를 찾아 크로플 원정대에 제보해주세요!\n        </p>\n        <button\n          type=\"button\"\n          @click=\"toCafeReport\"\n          class=\"btn--primary\"\n          id=\"btn-report\"\n        >\n          제보하기 +\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ic__speechBubble from \"@/assets/ic/speechBubble.svg\";\nimport ic__marker from \"@/assets/ic/marker.svg\";\n// import { fetchIpAddr, fetchLocation } from \"@/api/naver\";\n// import { fetchCafes } from \"@/api/cafe\";\nimport axios from \"axios\";\nimport NotRegisteredCafe from \"@/components/Main/NotRegisteredCafe.vue\";\nimport CafeListComponent from \"@/components/Main/CafeListComponent.vue\";\nimport SearchbarComponent from \"@/components/Main/SearchbarComponent.vue\";\nimport { ref } from \"vue\";\nimport { NaverMaps, NaverMarker, NaverInfoWindow } from \"vue3-naver-maps\";\nimport { saveAuthToCookie } from \"@/utils/cookies\";\n\nexport default {\n  components: {\n    SearchbarComponent,\n    NaverMaps,\n    NaverMarker,\n    NaverInfoWindow,\n    NotRegisteredCafe,\n    CafeListComponent,\n  },\n  setup: () => {\n    const map = ref();\n    // const mapOptions = {\n    //   latitude: 37.541, // 지도 중앙 위도\n    //   longtitude: 126.986, // 지도 중앙 경도\n    //   zoom: 16,\n    // };\n    const marker = ref();\n    const infoWindow = ref();\n    const isOpen = ref(false); // false: 안보임, true: 보임\n\n    const onLoadInfoWindow = (infoWindowObject) => {\n      infoWindow.value = infoWindowObject;\n      //   console.log(\"cafe window\", cafes);\n      //   cafes = cafes.map((cafe) => {\n      //     console.log(cafes);\n      //     console.log(\"cafe.name\");\n      //   });\n    };\n    const onLoadMarker = (markerObject) => {\n      marker.value = markerObject;\n    };\n    // 도로명 주소를 위경도로 반환\n    const onLoadMap = (cafes) => {\n      console.log(\"cafes\", cafes);\n      cafes = cafes.map((cafe) => {\n        window.naver.maps.Service.geocode(\n          {\n            address: cafe.addr,\n          },\n          function (status, response) {\n            if (status !== window.naver.maps.Service.Status.OK) {\n              return alert(\"Something wrong!\");\n            }\n            var result = response.result;\n            console.log(\"도로명 주소->좌표 반환결과\", result.items[0].point);\n            cafe.mapx = parseFloat(result.items[0].point.x);\n            cafe.mapy = parseFloat(result.items[0].point.y);\n          }\n        );\n        console.log(\"카페 도로명 주소\", cafe);\n        return cafe;\n      });\n    };\n\n    return {\n      onLoadMarker,\n      map,\n      marker,\n      onLoadMap,\n      isOpen,\n      onLoadInfoWindow,\n    };\n  },\n  mounted() {\n    this.fetchCafes();\n\n    const token = this.$route.query.token;\n    console.log(\"token\", token);\n\n    // 토큰값 스토어에 저장\n    this.$store.commit(\"setToken\", token);\n    saveAuthToCookie(token);\n  },\n  async created() {\n    let headerActive = true;\n    this.$store.commit(\"isHeaderActive\", headerActive);\n    // await this.getIpClient();\n    // await this.fetchLocation2();\n    // await this.fetchCafes();\n  },\n  data() {\n    return {\n      registered: false,\n      ic__speechBubble,\n      ic__marker,\n      page: \"main\",\n      clientIp: \"\",\n      clientAddr: \"\",\n      service: true,\n      email: \"\",\n      cafeList: [],\n      cafes: [\n        // {\n        //   id: \"0\",\n        //   name: \"메가 커피\",\n        //   roadaddr: \"서울 중구 세종대로 135\",\n        //   mapx: 0,\n        //   mapy: 0,\n        // },\n        // {\n        //   id: \"2\",\n        //   name: \"빽다방\",\n        //   roadaddr: \"서울 중구 세종대로22길 16\",\n        //   mapx: 0,\n        //   mapy: 0,\n        // },\n        // {\n        //   id: \"3\",\n        //   name: \"투썸\",\n        //   roadaddr: \"서울 중구 세종대로 110 서울특별시청 \",\n        //   mapx: 0,\n        //   mapy: 0,\n        // },\n      ],\n\n      isWindowOpen: false,\n    };\n  },\n\n  methods: {\n    fetchInfo(data) {\n      this.cafeInfo = data;\n    },\n    fetchResult(registered, cafeData) {\n      this.registered = registered;\n      this.cafeList = cafeData;\n    },\n    showResult(service) {\n      this.service = service;\n    },\n    // 카페 제보하기\n    toCafeReport() {\n      this.$router.push(\"/cafes/report\");\n    },\n\n    // 등록된 카페 전체 지도에 출력\n    async fetchCafes() {\n      try {\n        // console.log(\"전체 카페 조회(지도 출력)\");\n        const { data } = await axios.get(\"http://192.168.0.17:8080/cafes\");\n        console.log(\"카페 로그 찍기\", data);\n\n        // axios\n        //   .get(\"http://192.168.0.17:8080/cafes\")\n        //   .then(function (response) {\n        //     // response\n        //     console.log(response);\n        //   })\n        //   .catch(function (error) {\n        //     // 오류발생시 실행\n        //     console.log(error);\n        //   })\n        //   .then(function () {\n        //     // 항상 실행\n        //   });\n        this.cafes = data.data;\n        // this.cafes.id = cafeData.data.id;\n        // this.cafes.name = cafeData.data.name;\n        // this.cafes.roadaddr = cafeData.data.addr;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    openInfo(cafeId) {\n      this.$router.push(`/cafe/${cafeId}`);\n      console.log(cafeId);\n      this.isWindowOpen;\n    },\n    // 클라이언트 ip 주소 fetch\n    // async getIpClient() {\n    //   try {\n    //     const response = await fetchIpAddr();\n    //     console.log(\"클라이언드 ip 주소\", response.data);\n    //     // this.clientIp = response.data;\n    //     this.clientIp = response.data.toString();\n    //   } catch (error) {\n    //     console.error(error);\n    //   }\n    // },\n    // // 현재 주소 fetch\n    // async fetchLocation2() {\n    //   try {\n    //     // console.log(\"jh teset\", await fetchLocation(this.clientIp));\n    //     // const { location } = await fetchLocation(this.clientIp);\n    //     console.log(\"jh clientIp\", this.clientIp);\n    //     const test = await fetchLocation(this.clientIp);\n    //     console.log(\"jh test\", test);\n    //     // console.log(\"현위치\", location);\n    //     // this.clientAddr = location;\n    //   } catch (error) {\n    //     console.error(error.message);\n    //   }\n    // },\n    openInfoWindow(cafe) {\n      console.log(\"jh cafe\", this.marker, cafe);\n      this.marker = new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(cafe.mapy, cafe.mapx),\n        map: window.naver.maps,\n      });\n      this.isOpen = !this.isOpen;\n\n      // console.log(\n      //   this.marker.getPosition(),\n      //   \"\\n\",\n      //   test.getPosition(),\n      //   JSON.stringify(this.marker.getPosition()) !==\n      //     JSON.stringify(test?.getPosition())\n      // );\n      // this.isOpen = false;\n      // if (\n      //   JSON.stringify(this.marker.getPosition()) !==\n      //   JSON.stringify(test?.getPosition())\n      // ) {\n      //   this.marker = test;\n      //   this.isOpen = true;\n      //   return;\n      // }\n      // this.marker = test;\n      // // this.isOpen = !this.isOpen;\n    },\n  },\n};\n</script>\n\n<style></style>\n","<template>\n  <div id=\"not-regi-cafe\" class=\"container\">\n    <button @click=\"$emit('close-page')\">\n      <i class=\"fas fa-arrow-left fa-2x\"></i>\n    </button>\n    <p>\n      아직 등록되지 않은 카페네요.<br />\n      조금만 기다려 주세요!\n    </p>\n  </div>\n</template>\n\n<script>\nexport default {};\n</script>\n\n<style></style>\n","import { render } from \"./NotRegisteredCafe.vue?vue&type=template&id=32bbe4fc\"\nimport script from \"./NotRegisteredCafe.vue?vue&type=script&lang=js\"\nexport * from \"./NotRegisteredCafe.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/mac/Desktop/Croffle-front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div id=\"cafe-list\" class=\"container\">\n    <div class=\"card__wrapper--column\">\n      <div v-for=\"cafe in cafeList\" :key=\"cafe.id\" class=\"cafe__card\">\n        <span class=\"text__name\">{{ cafe.name }} </span>\n        <span class=\"text__addr\">{{ cafe.addr }} </span>\n      </div>\n    </div>\n    <button @click=\"$emit('close-page')\">\n      <i class=\"far fa-times-circle fa-2x\"></i>\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {};\n  },\n  props: {\n    cafeList: [\n      {\n        name: \"카페 이름1\",\n        addr: \"주소1\",\n      },\n      {\n        name: \"카페 이름2\",\n        addr: \"주소2\",\n      },\n    ],\n  },\n};\n</script>\n\n<style></style>\n","import { render } from \"./CafeListComponent.vue?vue&type=template&id=d2a656c2\"\nimport script from \"./CafeListComponent.vue?vue&type=script&lang=js\"\nexport * from \"./CafeListComponent.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/mac/Desktop/Croffle-front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div id=\"searchbar\">\n    <!-- <div class=\"searchbar__address\">\n      <img :src=\"ic_position\" />\n      <span>\n        <strong>현재 위치</strong>\n      </span>\n      <span class=\"address\">\n        {{ address }}\n      </span>\n    </div> -->\n    <div class=\"input__box\">\n      <input\n        placeholder=\"크로플 원정을 떠날 카페를 검색해주세요.\"\n        v-model=\"name\"\n      />\n      <button type=\"button\" @click=\"searchCafe\">\n        <img :src=\"ic_magnifier\" />\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ic_position from \"@/assets/ic/position.svg\";\nimport ic_magnifier from \"@/assets/ic/magnifier.svg\";\nimport { searchCafeInfo } from \"@/api/cafe\";\n\nexport default {\n  data() {\n    return {\n      ic_position,\n      ic_magnifier,\n      address: \"서울특별시 성북구\",\n      name: \"\",\n      cafeInfo: [],\n    };\n  },\n  methods: {\n    async searchCafe() {\n      const service = false;\n      this.$emit(\"showResult\", service);\n      try {\n        console.log(\"등록된 카페 여부 검색\");\n        const { cafeData } = await searchCafeInfo(this.name);\n\n        // 카페 등록 여부에 따른 페이지 처리 다시 하기\n        if (cafeData.code == \"4040\") {\n          const registered = false;\n          this.$emit(\"fetchResult\", registered);\n        } else {\n          const registered = false;\n          this.$emit(\"fetchResult\", registered, cafeData);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n};\n</script>\n\n<style></style>\n","import { render } from \"./SearchbarComponent.vue?vue&type=template&id=3f41d3a4\"\nimport script from \"./SearchbarComponent.vue?vue&type=script&lang=js\"\nexport * from \"./SearchbarComponent.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/mac/Desktop/Croffle-front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./MainComponent.vue?vue&type=template&id=b1cdb2a2\"\nimport script from \"./MainComponent.vue?vue&type=script&lang=js\"\nexport * from \"./MainComponent.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/mac/Desktop/Croffle-front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["fetchCafeInfo","cafeId","instance","searchCafeInfo","cafeName","setInterceptors","interceptors","request","use","config","console","log","headers","Authorization","getAuthFromCookie","error","Promise","reject","response","createInstance","axios","baseURL","createInstanceWithAuth","instanceWithAuth","createNaverInstance","createNaverProfile","createNaverGeoLocation","time","Math","floor","Date","toString","createIpInstance","search","class","_createElementVNode","id","_createElementBlock","_createVNode","_component_searchbar_component","onShowResult","$options","onFetchInfo","onFetchResult","service","$data","registered","_createBlock","_component_not_registered_cafe","onClosePage","_component_cafe_list_component","_hoisted_2","_component_naver_maps","width","height","onOnLoad","_ctx","_Fragment","_renderList","cafe","index","_component_naver_marker","key","latitude","mapy","longitude","mapx","$event","onClick","src","_hoisted_3","_toDisplayString","_component_naver_info_window","marker","isOpen","_hoisted_6","type","_hoisted_4","__exports__","_hoisted_5","$props","name","addr","data","props","cafeList","placeholder","ic_position","ic_magnifier","address","cafeInfo","methods","async","this","$emit","cafeData","code","components","SearchbarComponent","NaverMaps","NaverMarker","NaverInfoWindow","NotRegisteredCafe","CafeListComponent","setup","map","ref","infoWindow","onLoadInfoWindow","infoWindowObject","value","onLoadMarker","markerObject","onLoadMap","cafes","window","naver","maps","Service","geocode","status","Status","OK","alert","result","items","point","parseFloat","x","y","mounted","fetchCafes","token","$route","query","$store","commit","saveAuthToCookie","headerActive","ic__speechBubble","ic__marker","page","clientIp","clientAddr","email","isWindowOpen","fetchInfo","fetchResult","showResult","toCafeReport","$router","push","openInfo","openInfoWindow","Marker","position","LatLng","render"],"sourceRoot":""}