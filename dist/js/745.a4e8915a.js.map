{"version":3,"file":"js/745.a4e8915a.js","mappings":"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","sources":["webpack://croffle-frontend/./src/api/common/interceptors.js","webpack://croffle-frontend/./src/api/index.js","webpack://croffle-frontend/./src/api/owner.js","webpack://croffle-frontend/./src/components/Owner/CheckMember.vue","webpack://croffle-frontend/./src/components/Owner/CheckMember.vue?583f"],"sourcesContent":["import { getAuthFromCookie } from \"@/utils/cookies.js\";\n\nexport function setInterceptors(instance) {\n  // Add a request interceptor\n  instance.interceptors.request.use(\n    function (config) {\n      // Do something before request is sent\n      // console.log(config);\n      console.log(config);\n      config.headers.Authorization = `Bearer ${getAuthFromCookie()}`;\n      return config;\n    },\n    function (error) {\n      // Do something with request error\n      return Promise.reject(error);\n    }\n  );\n\n  // Add a response interceptor\n  instance.interceptors.response.use(\n    function (response) {\n      // Any status code that lie within the range of 2xx cause this function to trigger\n      // Do something with response data\n      return response;\n    },\n    function (error) {\n      // Any status codes that falls outside the range of 2xx cause this function to trigger\n      // Do something with response error\n      // 재요청인데\n      return Promise.reject(error);\n    }\n  );\n  return instance;\n}\n","import axios from \"axios\";\n\nimport { setInterceptors } from \"./common/interceptors\";\n\n// 1. 액시오스 초기화 함수 - 회원 권한 필요 없는\nfunction createInstance() {\n  return axios.create({\n    // baseURL: process.env.VUE_APP_API_URL, // 안되면 '/'로 변경\n    // baseURL: `/api`,\n    baseURL: \"192.168.0.17:8080/\",\n  });\n  // return instance;\n  // return setInterceptors(instance);\n}\n\n// 2. 회원 권한 필요한 경우\nfunction createInstanceWithAuth() {\n  const instance = axios.create({\n    baseURL: `/api`,\n  });\n  return setInterceptors(instance);\n}\n\n// 1. 공통(회원 권한 x)\nexport const instance = createInstance();\n\n// 2. 회원 권한 필요한 경우\nexport const instanceWithAuth = createInstanceWithAuth();\n\n/*********** 네이버 ************/\n// 네이버 검색\nfunction createNaverInstance() {\n  return axios.create({\n    baseURL: `/v1/search`,\n    headers: {\n      \"X-Naver-Client-Id\": \"WDBUTDGAh6YGJ6Umihxr\",\n      \"X-Naver-Client-Secret\": \"Vjn2nII5K3\",\n    },\n  });\n  // return instance;\n}\n\n// 네이버 프로필 호출\nfunction createNaverProfile() {\n  const instance = axios.create({\n    baseURL: `/v4`,\n  });\n  return setInterceptors(instance);\n}\n\n// 네이버 GeoLocation 현재 위치 제공\nfunction createNaverGeoLocation() {\n  const time = Math.floor(+new Date()).toString();\n  const instance = axios.create({\n    baseURL: `/v3/geolocation/v2`,\n    headers: {\n      \"x-ncp-apigw-timestamp\": time,\n      \"x-ncp-iam-access-key\": \"wnm6dyQfAzJLgs1r8r9I\",\n      \"x-ncp-apigw-signature-v2\": \"l9RFKQeUe3n09f4cu2m6CWyayyoC0p5jgrPXerDf\",\n    },\n  });\n  return instance;\n}\n\n// ip 주소 가져오기\nfunction createIpInstance() {\n  const instance = axios.create({\n    baseURL: `/v2`,\n  });\n  return instance;\n}\n\n// 카페 제보 네이버 검색\nexport const search = createNaverInstance();\n\n// 현재 위치 정보 제공\nexport const geolocation = createNaverGeoLocation();\n\n// 네이버 프로필 호출\nexport const profile = createNaverProfile();\n\n// 클라이언드 ip 주소 제공\nexport const getIp = createIpInstance();\n","/* 사장님 서비스 api 함수 */\nimport { instanceWithAuth } from \"@/api/index\";\n\n// 사장님 인증하기(확인)\nfunction verifyOwner() {\n  return instanceWithAuth.put(\"/owner/verify\");\n}\n\n// 메뉴 수정(확인)\nfunction editOwnerMenu(menuId, menuData) {\n  return instanceWithAuth.put(`owner/menu/${menuId}`, menuData);\n}\n\n// 메뉴 조회(확인)\nfunction fetchOwnerMenu() {\n  return instanceWithAuth.get(\"owner/menus\");\n}\n\n// 매장 조회(완료)\nfunction fetchOwnerCafe() {\n  return instanceWithAuth.get(\"owner/cafe\");\n}\n\n// 매장 정보 수정(완료)\nfunction editOwnerCafe(cafeId, name, telephone, hours, site, benefit) {\n  return instanceWithAuth.put(\n    `owner/cafe/${cafeId}?cafeName=${name}&telephone=${telephone}&hours=${hours}&site=${site}&benefit=${benefit}`\n  );\n}\n\n// 메뉴 추가(완료)\nfunction createOwnerMenu() {\n  return instanceWithAuth.post(\"owner/menu\");\n}\n\n// 스탬프 찍어주기(완료)\nfunction createStamp(cafeId, userId) {\n  return instanceWithAuth.post(\"owner/stamp\", cafeId, userId);\n}\n\n// 회원 조회(회원 id 보내지는거 체크)\nfunction fetchMemberInfo(phoneNum) {\n  return instanceWithAuth.post(\"owner/find-user\", phoneNum);\n}\n\nexport {\n  fetchOwnerMenu,\n  createOwnerMenu,\n  editOwnerMenu,\n  createStamp,\n  editOwnerCafe,\n  fetchOwnerCafe,\n  verifyOwner,\n  fetchMemberInfo,\n};\n","<template>\n  <div class=\"owner-stamp\">\n    <header class=\"owner__header\">\n      <h1>회원 조회</h1>\n      <span>적립할 회원의 전화번호를 입력해주세요.</span>\n    </header>\n    <form>\n      <div class=\"input__box\">\n        <label>회원 전화번호</label>\n        <input\n          v-model=\"contact\"\n          placeholder=\"회원 전화번호를 입력해주세요.\"\n          maxlength=\"20\"\n          oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1')\"\n          @keyup=\"getPhoneMask(contact)\"\n        />\n        <span class=\"count\">{{ phoneLength }}/20</span>\n      </div>\n    </form>\n    <button\n      type=\"button\"\n      @click=\"fetchMembership\"\n      :class=\"['btn--md', isValid ? 'btnPrimary' : 'btnDisabled']\"\n      :disabled=\"isValid == false\"\n    >\n      회원조회\n    </button>\n  </div>\n</template>\n\n<script>\nimport { fetchMemberInfo } from \"@/api/owner\";\n\nexport default {\n  props: {\n    cafeId: Number,\n  },\n  data() {\n    return {\n      contact: \"\",\n      stampInfo: [\n        {\n          name: \"오승현\",\n          stampCnt: 4,\n        },\n      ],\n    };\n  },\n  computed: {\n    isValid() {\n      if (this.contact) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    phoneLength() {\n      return this.contact.length;\n    },\n  },\n  methods: {\n    getPhoneMask(val) {\n      let res = this.getMask(val);\n      this.contact = res;\n    },\n    getMask(phoneNumber) {\n      if (!phoneNumber) return phoneNumber;\n      phoneNumber = phoneNumber.replace(/[^0-9]/g, \"\");\n      let res = \"\";\n      if (phoneNumber.length < 3) {\n        res = phoneNumber;\n      } else {\n        if (phoneNumber.substr(0, 2) == \"02\") {\n          if (phoneNumber.length <= 5) {\n            //02-123-5678\n            res = phoneNumber.substr(0, 2) + \"-\" + phoneNumber.substr(2, 3);\n          } else if (phoneNumber.length > 5 && phoneNumber.length <= 9) {\n            //02-123-5678\n            res =\n              phoneNumber.substr(0, 2) +\n              \"-\" +\n              phoneNumber.substr(2, 3) +\n              \"-\" +\n              phoneNumber.substr(5);\n          } else if (phoneNumber.length > 9) {\n            //02-1234-5678\n            res =\n              phoneNumber.substr(0, 2) +\n              \"-\" +\n              phoneNumber.substr(2, 4) +\n              \"-\" +\n              phoneNumber.substr(6);\n          }\n        } else {\n          if (phoneNumber.length < 8) {\n            res = phoneNumber;\n          } else if (phoneNumber.length == 8) {\n            res = phoneNumber.substr(0, 4) + \"-\" + phoneNumber.substr(4);\n          } else if (phoneNumber.length == 9) {\n            res =\n              phoneNumber.substr(0, 3) +\n              \"-\" +\n              phoneNumber.substr(3, 3) +\n              \"-\" +\n              phoneNumber.substr(6);\n          } else if (phoneNumber.length == 10) {\n            res =\n              phoneNumber.substr(0, 3) +\n              \"-\" +\n              phoneNumber.substr(3, 3) +\n              \"-\" +\n              phoneNumber.substr(6);\n          } else if (phoneNumber.length > 10) {\n            //010-1234-5678\n            res =\n              phoneNumber.substr(0, 3) +\n              \"-\" +\n              phoneNumber.substr(3, 4) +\n              \"-\" +\n              phoneNumber.substr(7);\n          }\n        }\n      }\n      return res;\n    },\n    async fetchMembership() {\n      try {\n        console.log(\"회원정보 조회\");\n        // 카페 id 보내기\n        const { data } = await fetchMemberInfo({\n          telephone: this.contact,\n        });\n        this.stampInfo = data.data;\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        const stampInfo = this.stampInfo;\n        this.$emit(\"fetchStamp\", stampInfo);\n        this.$router.push(\"/owner/stampcoupon\");\n      }\n    },\n  },\n};\n</script>\n\n<style></style>\n","import { render } from \"./CheckMember.vue?vue&type=template&id=129a9ca4\"\nimport script from \"./CheckMember.vue?vue&type=script&lang=js\"\nexport * from \"./CheckMember.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/mac/Desktop/Croffle-front/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["setInterceptors","instance","interceptors","request","use","config","console","log","headers","Authorization","getAuthFromCookie","error","Promise","reject","response","createInstance","axios","baseURL","createInstanceWithAuth","instanceWithAuth","createNaverInstance","createNaverProfile","createNaverGeoLocation","time","Math","floor","Date","toString","createIpInstance","search","verifyOwner","editOwnerMenu","menuId","menuData","fetchOwnerMenu","fetchOwnerCafe","editOwnerCafe","cafeId","name","telephone","hours","site","benefit","createOwnerMenu","createStamp","userId","fetchMemberInfo","phoneNum","class","_createElementVNode","_createElementBlock","_hoisted_2","_hoisted_4","$data","$event","placeholder","maxlength","oninput","onKeyup","$options","_toDisplayString","type","onClick","disabled","_hoisted_6","props","Number","data","contact","stampInfo","stampCnt","computed","isValid","this","phoneLength","length","methods","getPhoneMask","val","res","getMask","phoneNumber","replace","substr","async","message","$emit","$router","push","__exports__","render"],"sourceRoot":""}